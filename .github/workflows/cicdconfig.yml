name: Docker Image CI

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: DOCKER_USERNAME
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2


      # Step 4: Set up AWS CLI and authenticate to Amazon ECR
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 5: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          echo "Logging in to Amazon ECR"
          aws ecr-public get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin public.ecr.aws/t5x3g0l1/careercon/client-react

      # Step 6: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t public.ecr.aws/t5x3g0l1/careercon/client-react:latest .
          docker tag public.ecr.aws/t5x3g0l1/careercon/client-react:latest public.ecr.aws/t5x3g0l1/careercon/client-react:${GITHUB_SHA}

      # Step 7: Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push public.ecr.aws/t5x3g0l1/careercon/client-react:latest
          docker push public.ecr.aws/t5x3g0l1/careercon/client-react:${GITHUB_SHA}

      # Step 8: Deploy to ECS using imehedi/actions-awscli-v2
      - name: Deploy to ECS
        uses: imehedi/actions-awscli-v2@latest
        with:
          args: ecs update-service --cluster ${{ secrets.ECS_CLUSTER_NAME }} --service ${{ secrets.ECS_SERVICE_NAME }} --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
